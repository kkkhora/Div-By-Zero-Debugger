Pointer Analysis Results:
  %x      : { @(%x = alloca i32, align 4); }
  %y      : { @(%y = alloca i32, align 4); }
  %z      : { @(%z = alloca i32, align 4); }

get store value operand:   %call = call i32 @getchar()
get store value operand: i32 2
Load type is integer
  %x = alloca i32, align 4
Load in InMem
Load Domain: MaybeZero
get store value operand: i32 0
Load type is integer
  %x = alloca i32, align 4
Load in InMem
Load Domain: MaybeZero
Load type is integer
  %y = alloca i32, align 4
Load in InMem
Load Domain: MaybeZero
get store value operand:   %div = sdiv i32 %1, %2
get store value operand:   %call = call i32 @getchar()
get store value operand: i32 2
Load type is integer
  %x = alloca i32, align 4
Load in InMem
Load Domain: MaybeZero
get store value operand: i32 0
Load type is integer
  %x = alloca i32, align 4
Load in InMem
Load Domain: MaybeZero
Load type is integer
  %y = alloca i32, align 4
Load in InMem
Load Domain: MaybeZero
get store value operand:   %div = sdiv i32 %1, %2
Dataflow Analysis Results:
Instruction:   %x = alloca i32, align 4
In set: 

Out set: 


Instruction:   %y = alloca i32, align 4
In set: 

Out set: 


Instruction:   %z = alloca i32, align 4
In set: 

Out set: 


Instruction:   %call = call i32 @getchar()
In set: 

Out set: 
    [ %call    |-> MaybeZero ]

Instruction:   store i32 %call, i32* %x, align 4
In set: 
    [ %call    |-> MaybeZero ]
Out set: 
    [ %call    |-> MaybeZero ]
    [ %x       |-> MaybeZero ]

Instruction:   store i32 2, i32* %y, align 4
In set: 
    [ %call    |-> MaybeZero ]
    [ %x       |-> MaybeZero ]
Out set: 
    [ %call    |-> MaybeZero ]
    [ %x       |-> MaybeZero ]
    [ %y       |-> NonZero   ]

Instruction:   %0 = load i32, i32* %x, align 4
In set: 
    [ %call    |-> MaybeZero ]
    [ %x       |-> MaybeZero ]
    [ %y       |-> NonZero   ]
Out set: 
    [ %0       |-> MaybeZero ]
    [ %call    |-> MaybeZero ]
    [ %x       |-> MaybeZero ]
    [ %y       |-> NonZero   ]

Instruction:   %cmp = icmp sgt i32 %0, 10
In set: 
    [ %0       |-> MaybeZero ]
    [ %call    |-> MaybeZero ]
    [ %x       |-> MaybeZero ]
    [ %y       |-> NonZero   ]
Out set: 
    [ %0       |-> MaybeZero ]
    [ %call    |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %x       |-> MaybeZero ]
    [ %y       |-> NonZero   ]

Instruction:   br i1 %cmp, label %if.then, label %if.end
In set: 
    [ %0       |-> MaybeZero ]
    [ %call    |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %x       |-> MaybeZero ]
    [ %y       |-> NonZero   ]
Out set: 
    [ %0       |-> MaybeZero ]
    [ %call    |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %x       |-> MaybeZero ]
    [ %y       |-> NonZero   ]

Instruction:   store i32 0, i32* %y, align 4
In set: 
    [ %0       |-> MaybeZero ]
    [ %call    |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %x       |-> MaybeZero ]
    [ %y       |-> NonZero   ]
Out set: 
    [ %0       |-> MaybeZero ]
    [ %call    |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %x       |-> MaybeZero ]
    [ %y       |-> Zero      ]

Instruction:   br label %if.end
In set: 
    [ %0       |-> MaybeZero ]
    [ %call    |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %x       |-> MaybeZero ]
    [ %y       |-> Zero      ]
Out set: 
    [ %0       |-> MaybeZero ]
    [ %call    |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %x       |-> MaybeZero ]
    [ %y       |-> Zero      ]

Instruction:   %1 = load i32, i32* %x, align 4
In set: 
    [ %0       |-> MaybeZero ]
    [ %call    |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %x       |-> MaybeZero ]
    [ %y       |-> MaybeZero ]
Out set: 
    [ %0       |-> MaybeZero ]
    [ %1       |-> MaybeZero ]
    [ %call    |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %x       |-> MaybeZero ]
    [ %y       |-> MaybeZero ]

Instruction:   %2 = load i32, i32* %y, align 4
In set: 
    [ %0       |-> MaybeZero ]
    [ %1       |-> MaybeZero ]
    [ %call    |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %x       |-> MaybeZero ]
    [ %y       |-> MaybeZero ]
Out set: 
    [ %0       |-> MaybeZero ]
    [ %1       |-> MaybeZero ]
    [ %2       |-> MaybeZero ]
    [ %call    |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %x       |-> MaybeZero ]
    [ %y       |-> MaybeZero ]

Instruction:   %div = sdiv i32 %1, %2
In set: 
    [ %0       |-> MaybeZero ]
    [ %1       |-> MaybeZero ]
    [ %2       |-> MaybeZero ]
    [ %call    |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %x       |-> MaybeZero ]
    [ %y       |-> MaybeZero ]
Out set: 
    [ %0       |-> MaybeZero ]
    [ %1       |-> MaybeZero ]
    [ %2       |-> MaybeZero ]
    [ %call    |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %x       |-> MaybeZero ]
    [ %y       |-> MaybeZero ]

Instruction:   store i32 %div, i32* %z, align 4
In set: 
    [ %0       |-> MaybeZero ]
    [ %1       |-> MaybeZero ]
    [ %2       |-> MaybeZero ]
    [ %call    |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %x       |-> MaybeZero ]
    [ %y       |-> MaybeZero ]
Out set: 
    [ %0       |-> MaybeZero ]
    [ %1       |-> MaybeZero ]
    [ %2       |-> MaybeZero ]
    [ %call    |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %x       |-> MaybeZero ]
    [ %y       |-> MaybeZero ]
    [ %z       |-> Uninit    ]

Instruction:   ret void
In set: 
    [ %0       |-> MaybeZero ]
    [ %1       |-> MaybeZero ]
    [ %2       |-> MaybeZero ]
    [ %call    |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %x       |-> MaybeZero ]
    [ %y       |-> MaybeZero ]
    [ %z       |-> Uninit    ]
Out set: 
    [ %0       |-> MaybeZero ]
    [ %1       |-> MaybeZero ]
    [ %2       |-> MaybeZero ]
    [ %call    |-> MaybeZero ]
    [ %cmp     |-> MaybeZero ]
    [ %div     |-> Uninit    ]
    [ %x       |-> MaybeZero ]
    [ %y       |-> MaybeZero ]
    [ %z       |-> Uninit    ]

